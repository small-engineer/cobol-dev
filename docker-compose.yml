services:
  apache:
    build: ./apache
    container_name: apache
    depends_on:
      cobol-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./frontend:/usr/local/apache2/htdocs:ro
      - ./apache/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro
      - cobol_socket:/var/run/cobol
    ports:
      - "3000:80"
    environment:
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  cobol-server:
    build: ./cobol
    container_name: cobol-server
    volumes:
      - cobol_socket:/var/run/cobol
    healthcheck:
      test: ["CMD", "test", "-S", "/var/run/cobol/cobol.sock"]
      interval: 5s
      retries: 5

  postgres:
    image: postgres:15
    container_name: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser"]
      interval: 5s
      retries: 5

volumes:
  db_data:
  cobol_socket:
